:host {
  display: block;
}

.puzzle {
  /* Squares per side */
  --columns: 10;
  --rows: 10;

  /* Width as a calculation of base size */
  --width: calc(var(--base-size, 1em) * 10);
  --height: var(--height, auto);

  /* Allow clue boxes to honor our puzzle grid */
  --clue-display: contents;

  /* Start column and row for this clue  */
  --column: 1;
  --row: 1;

  /* Color the puzzle */
  background: var(--primary-background);
  border: 2px solid var(--primary-background);

  /* Break puzzle into an even grid */
  display: grid;
  grid-template-columns: repeat(var(--columns), calc(var(--width) / var(--columns)));
  grid-template-rows: repeat(var(--rows), calc(var(--height) / var(--rows)));

  /* Make us a square puzzle */
  height: var(--height);
  width: var(--width);
  margin: 1rem;
}
